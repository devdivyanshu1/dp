https://leetcode.com/problems/palindromic-substrings/

class Solution {
public:
    int countSubstrings(string s) {
     int n=s.size();
     vector<vector<int>>dp(n,vector<int>(n,0));
     vector<vector<int>>dp1(n,vector<int>(n,0));
     int ans=0;
     for(int i=0;i<n;i++){
        dp[i][i]=1;
        dp1[i][i]=1;
      
     }
     for(int i=0;i<n-1;i++){
        if(s[i]==s[i+1]){
            dp[i][i+1]=1;
            dp1[i][i+1]=3;
        }
        else{
            dp1[i][i+1]=2;
        }
     }
     for(int length=3;length<=n;length++){
        for(int start=0;start<=n-length;start++){
             int end=start+length-1;
             if(s[start]==s[end] && dp[start+1][end-1]==1){
                dp[start][end]=1;
              
             }
             else{
                dp[start][end]=0;
             }
             dp1[start][end]=dp1[start][end-1]+dp1[start+1][end]-dp1[start+1][end-1]+dp[start][end];
             
        }
     }

         return dp1[0][n-1];
    }
};
